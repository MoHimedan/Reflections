When would you want to use a remote repository rather than keeping all your work local?

If you're interacting with others on the same project or if you'll be using multiple workstations to access the same content.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

You want an non-changing version to work with. You want to know if your new code broke the project or if it was someone else's commit getting synced into the repo.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Fork is used to create a GitHub copy of someone else's repo.
Clone is used to copy a repo, usually one of your own, either from GitHub or locally.
Branch is used to develop a new work stream and allow the other to continue unaltered.

What is the benefit of having a copy of the last known state of the remote stored locally?

This allows for fast-forward merging. I will not have to do a merge conflict resolution.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Collaborating on code development without Git or GitHub would be far more difficult. Having the ability to watch a repo or a branch is great for collaboration. Also the pull request is a nice safety check to get a peer to review your branch changes.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When working on a new feature, I'd use a new branch. This guarantees that I won't break anything in master. Also, this way, master will not be edited by multiple people simultaneously, causing conflicts. Making changes directly in master is quicker and mostly safe when working on a project alone.





